<?php
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

function planet_language_switcher_preprocess_html(&$variables)
{
    /** Where to display the transparent header */
    $allowed_pages = [
        "author"
    ];
    $node = \Drupal::routeMatch()->getParameter('node');

    if ($node && in_array($node->bundle(), $allowed_pages)) {
        $variables['attributes']['class'][] = "planet-header-transparent";
    }

}

/**
 * Implements hook_preprocess_HOOK() for node templates.
 */
function planet_language_switcher_preprocess_node__author(&$variables)
{
    // Get the last 5 article titles.
    $node = $variables['node'];

    // Get the NID (node ID) of the Author node.
    $node_id = $node->id();

    $author_data = planet_core_get_author_articles($node_id);

    // Pass the titles to the template.
    $variables['author_data'] = $author_data;
}
/**
 * Implements hook_theme().
 */
function planet_language_switcher_theme()
{
    return [
        'language_switcher' => [
            'variables' => ['data' => []],
        ],
        'onboarding_page_template' => [
            'variables' => ['content' => NULL],
            'template' => 'page--onboarding-page-template',
            'base hook' => 'page',
        ],
    ];
}

// function log_to_file($text)
// {
//   $f = fopen('my_log.txt', 'a');
//   fwrite($f, date('Ymd H:i:s - ') . $text . "\n");
//   fclose($f);
// }

/**
 * Implements hook_theme_suggestions_HOOK_alter() to suggest a custom template for a specific node.
 */
function planet_language_switcher_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
    $node = \Drupal::routeMatch()->getParameter('node');

    if (!$node) {
        return;
    }

    $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());

    /** Onboarding page tempalte */
    if ($node instanceof \Drupal\node\NodeInterface && $alias == "/customer-resources-tobe") {
        $suggestions[] = 'onboarding_page_template';
    }
}

function planet_language_switcher_retrieve_browser_lang()
{
    return substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);
}


function planet_language_switcher_page_bottom(array &$page_bottom)
{
    $route_name = \Drupal::routeMatch()->getRouteName();
    if ($route_name === 'entity.node.canonical') {
        if ($node = \Drupal::routeMatch()->getParameter('node')) {

            $config = \Drupal::config('planet_language_switcher.settings');
            $is_lang_detection_enabled = $config->get('enable_language_detection');
            
            $pretty_languages = array(
                "en" => "English",
                "fr" => "French",
                "it" => "Italian",
                "de" => "German",
                "es" => "Spanish",
            );

            $language_texts = [
                'es' => 'Cambiar a Español', // Spanish
                'fr' => 'Changer en Français', // French
                'it' => 'Passare all\'italiano', // Italian
                'de' => 'Wechseln Sie zum Deutsch', // German
                'en' => 'Change to English',
            ];

            $languageManager = \Drupal::languageManager();
            $current_lang_id = $languageManager->getCurrentLanguage()->getId();
            $browser_lang_id = planet_language_switcher_retrieve_browser_lang();

            $translations = $node->getTranslationLanguages();
            $is_frontpage = \Drupal::service('path.matcher')->isFrontPage();

            // Get all translations of the current node.

            // Filter translations that are available and published.
            $available_translations = [];
            foreach ($translations as $lang_code => $language) {
                // Check if the translation is published.

                if ($node->getTranslation($lang_code)->isPublished()) {
                    $available_translations[] = $lang_code;
                }
            }

            // If browser language is different than the current page language
            // and translation exists for that language then show popup.
            $translation_exists = ($current_lang_id != $browser_lang_id) && (in_array($browser_lang_id, $available_translations));


            if (!$translation_exists or !$is_lang_detection_enabled) {
                return;
            }


            $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id(), $browser_lang_id);
            $alias = $browser_lang_id == "en" ? $alias : "/" . $browser_lang_id . $alias;

            $homepage_url = $browser_lang_id == "en" ? "/" : "/" . $browser_lang_id;
            $url = $is_frontpage ? $homepage_url : $alias;
            
            $modal = '<div class="modal language-detection-modal micromodal-slide" id="modal-language-detection" aria-hidden="true">
                <div class="modal__overlay" tabindex="-1" data-micromodal-close>
                <div class="modal__container" role="dialog" aria-modal="true" aria-labelledby="modal-1-title">
                    <header class="modal__header">
    <img class="modal__close" aria-label="Close modal 1" data-micromodal-close="1" src="/resources/icons/close.svg">
                    </header>
                    <main class="modal__content" id="modal-1-content">
                        <div>
                        <div class="main-banner-image language-detection-image" style="background-image:url("/resources/images/language-detection.jpeg")">
                        </div>
                        <div class="main-banner-text">
                        <span class="coh-heading coh-style-heading-3-planet">Choose your preferred language!</span>
                        <p class="coh-style-body-large---tt-commons-planet">We have detected your location, and we would like to enhance your browsing experience. Select your preferred langauge.</p>
                        <div class="buttons-wrapper coh-container">
                        <a class="modal-lang-detection-btn coh-link coh-style-primary-dark-atom-" href="' . $url .'"><img src="/resources/flag-icons/'.$browser_lang_id.'.svg">'. $language_texts[$browser_lang_id] .'</a>
                        <span class="modal-lang-detection-btn coh-link coh-style-secondary-outlined-atom-" aria-label="Close modal 1" data-micromodal-close="1"><img src="/resources/flag-icons/'.$current_lang_id.'.svg"> Stay in ' . $pretty_languages[$current_lang_id] . '</span>
                        </div>
                        </div>
                        </div>
                        </div>
                    </main>
                </div>
                </div>
            </div>';

            $page_bottom[] = ['#markup' => $modal];
        }
    }
}