<?php

/**
 * @file
 * Primary module hooks for Planet HTML Sitemap module.
 */

/**
 * Implements hook_theme().
 */
function planet_html_sitemap_theme() {
  $current_url = \Drupal::service('path.current')->getPath();
  $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);

  if ($path_alias === '/sitemap') {
    return [
      'sitemap_html' => [
        'template' => 'sitemap-html',
        'base hook' => 'node',
        'variables' => [
          'term_tree' => [],
        ],
      ],
    ];
  }

}

/**
 * Implements hook_preprocess_HOOK() for node.
 */
function planet_html_sitemap_preprocess(&$variables) {
  if (isset($variables['theme_hook_original'])) {
    if ($variables['theme_hook_original'] === 'node') {
      $current_url = \Drupal::service('path.current')->getPath();

      $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);

      if ($path_alias === '/sitemap') {
        $variables['term_tree'] = \Drupal::service('planet_html_sitemap.helper')->buildTree();
        $variables['#attached']['library'][] = 'planet_html_sitemap/planet_html_sitemap';
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function planet_html_sitemap_theme_suggestions_node_alter(&$suggestions, &$variables) {
  $url = \Drupal::service('path.current')->getPath();
  $path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($url);

  if ($path_alias === '/sitemap') {
    $suggestions[] = 'sitemap_html';
  }
}

/**
 * Implements hook_preprocess_HOOK() for input__checkbox.
 */
function planet_html_sitemap_preprocess_input__checkbox(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if (!$node) {
    if (isset($variables['element']['#id']) && $variables['element']['#id'] == 'edit-field-basic-page-metatag-0-advanced-robots-robots-noindex') {
      $variables['attributes']['checked'] = TRUE;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK() for input__checkbox.
 */
function planet_html_sitemap_simple_sitemap_links_alter(&$links, $sitemap) {

  $entityTypeManager = \Drupal::service('entity_type.manager');
  $metatagManager = \Drupal::service('metatag.manager');
  $pathAliasManager = \Drupal::service('path_alias.manager');

  foreach ($links as $key => $link) {
    $node_id = $link['meta']['entity_info']['id'];
    $node = $entityTypeManager->getStorage('node')->load($node_id);

    if ($node && $node->isPublished()) {
      $meta_tags = $metatagManager->tagsFromEntityWithDefaults($node);
      $meta_tags_values = $metatagManager->generateTokenValues($meta_tags, $node);
      $robots = $meta_tags_values['robots'] ?? false;

       // Get the node language
       $node_language = $node->language()->getId();

       // Get the alias of the node
      $node_path = '/node/' . $node_id;
      $alias = $pathAliasManager->getAliasByPath($node_path, $node_language);

      // Log the node ID, language, alias, and robots meta tag value
      $log_entry = [
        'node_id' => $node_id,
        'language' => $node_language,
        'alias' => $alias,
        'robots' => $robots,
      ];

      $f = fopen('my_log.txt', 'a');
        fwrite($f, date('Ymd H:i:s - ') . var_export($log_entry, true) . "\n");
        fclose($f);

      $is_noindex = str_contains($robots, 'noindex');
      $is_lp = str_contains($alias, '/lp/');

      if ($is_noindex || $is_lp || !$alias) {
        unset($links[$key]);
      }
    }
  }
}
