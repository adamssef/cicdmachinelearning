<?php

use Drupal\node\NodeInterface;

/**
 * Implements hook_theme().
 */
function planet_accept_payments_theme(): array {
  return [
    'node__accept_payments' => [
      'template' => 'node--accept-payments',
      'base hook' => 'node',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function planet_accept_payments_theme_suggestions_node_alter(array &$suggestions, array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  $route_object = \Drupal::routeMatch()->getRouteObject();
  $current_url = \Drupal::service('path.current')->getPath();
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);
  $is_admin_page = \Drupal::service('router.admin_context')->isAdminRoute($route_object);

  if (!$node or !($node instanceof NodeInterface)) {
    return;
  }

  $node_translation_service = \Drupal::service('planet_core.node_translation_service');

  if (!$is_admin_page) {
    $translations = $node_translation_service->getTranslationArrWithoutPrefixes('/payments');

    if (_check_if_empty_or_null($translations)) {
      return;
    }

    $lang_id = \Drupal::languageManager()->getCurrentLanguage()->getId();

    if (in_array($alias, $translations) || in_array("/$lang_id" . $alias, $translations)) {
      $variables['cards'] = \Drupal::service("planet_accept_payments.service")->getCards();
      $suggestions[] = 'node__accept_payments';
    }
  }

}

function planet_accept_payments_preprocess_node(array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  $node_translation_service = \Drupal::service('planet_core.node_translation_service');
  $route_object = \Drupal::routeMatch()->getRouteObject();
  $current_url = \Drupal::service('path.current')->getPath();
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);
  $is_admin_page = \Drupal::service('router.admin_context')->isAdminRoute($route_object);

  if (!$node or !($node instanceof NodeInterface)) {
    return;
  }

  if (!$is_admin_page) {
    $translations = $node_translation_service->getTranslationArrWithoutPrefixes('/payments');

    if (_check_if_empty_or_null($translations)) {
      return;
    }

    $lang_id = \Drupal::languageManager()->getCurrentLanguage()->getId();

    if (in_array($alias, $translations) || in_array("/$lang_id" . $alias, $translations)) {
      $case_studies_this_langugage_url = $node_translation_service->getTranslationArrWithPrefixes('/case-studies');
      $contact_sales_this_languge_url = $node_translation_service->getTranslationArrWithPrefixes('/contact/sales');
      $travel_url = $node_translation_service->getTranslationArrWithPrefixes('/travel');
      $retail_url = $node_translation_service->getTranslationArrWithPrefixes('/retail');
      $hospitality_url = $node_translation_service->getTranslationArrWithPrefixes('/hospitality');
      $variables['hospitality_url'] = $hospitality_url[$lang_id] ?? $hospitality_url['en'];
      $variables['retail_url'] = $retail_url[$lang_id] ?? $retail_url['en'];
      $variables['case_studies_url'] = $case_studies_this_langugage_url[$lang_id] ?? $case_studies_this_langugage_url['en'];
      $variables['travel_url'] = $travel_url[$lang_id] ?? $travel_url['en'];
      $variables['contact_sales_url'] = $contact_sales_this_languge_url[$lang_id] ?? $contact_sales_this_languge_url['en'];
      $variables['brands'] = \Drupal::service('planet_accept_payments.service')->getBrandsWeWorkWith();
    }
  }
}

/**
 * Implements hook_preprocess_hook().
 */
function planet_accept_payments_preprocess_page(&$variables) {
  $route_object = \Drupal::routeMatch()->getRouteObject();
  $current_url = \Drupal::service('path.current')->getPath();
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);
  $is_admin_page = \Drupal::service('router.admin_context')->isAdminRoute($route_object);
  $node_translation_service = \Drupal::service('planet_core.node_translation_service');

  if (!$is_admin_page) {
    $translations = $node_translation_service->getTranslationArrWithoutPrefixes('/payments');

    if (_check_if_empty_or_null($translations)) {
      return;
    }

    $lang_id = \Drupal::languageManager()->getCurrentLanguage()->getId();

    if (in_array($alias, $translations) || in_array("/$lang_id" . $alias, $translations)) {
      $variables['#attached']['library'][] = 'planet_accept_payments/tailwind';
      $variables['#attached']['library'][] = 'planet_accept_payments/planet_accept_payments';
      $variables['#attached']['library'][] = 'planet_core/brands-we-work-with';
      $variables['#attached']['library'][] = 'planet_core/swiper-bundle';
    }
  }
}

function _check_if_empty_or_null($translations) {
  return empty($translations) || is_null($translations);
}
