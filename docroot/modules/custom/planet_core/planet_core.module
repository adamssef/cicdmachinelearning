<?php

/**
 * @file
 * Custom hooks functions for the planet_core module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\WebformSubmissionInterface;


/**
 * Reads UTMs from the URL and stores them as cookies if they do not already exist.
 *
 * The function reads the UTM parameters in the URL, checks if the cookie doesn't already exist and
 * stores the value of that UTM as cookie.
 */

function sanitize_cookie($value) {
  return filter_var($value, FILTER_SANITIZE_STRING);
}

function utms_cookie_storage_init() {
  $cookie_duration = 2592000; // 30 days in seconds
  
  $request = \Drupal::requestStack()->getCurrentRequest();
  $queryParams = $request->query->all();

  $utms = array("utm_source", "utm_medium", "utm_campaign", "utm_term", "utm_content");
  $utms_in_query_string = !empty(array_intersect($utms, array_keys($queryParams)));

  if ($utms_in_query_string) {
    // We have UTMs in the query string, so we disable the cache for this case
    \Drupal::service('page_cache_kill_switch')->trigger();
  }

  foreach($utms as $utm) {
    if (isset($queryParams[$utm]) && !isset($_COOKIE[$utm])) {
      $utm_value = sanitize_cookie($queryParams[$utm]);
      user_cookie_save(array($utm => $utm_value));
    }
  }
}

/**
 * Implements hook_preprocess_html().
 *
 * Changes the title of the user page.
 */
function planet_core_preprocess_html(&$variables): void {
  $routeName = \Drupal::routeMatch()->getRouteName();
  if ($routeName === 'entity.user.canonical') {
    $variables['head_title']['title'] = '';
  }
  utms_cookie_storage_init();
}


/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function planet_core_webform_submission_presave(WebformSubmissionInterface $webform_submission): void {
  // Add UTM to the 'Get in touch' webform.
  if ($webform_submission->getWebform()->id() == 'get_in_touch') {

    // Check for UTMs cookies and sets them as a variable. 
    // Later we check for the variables to send the UTMs to the form
    $cookie_utm_source = isset($_COOKIE['Drupal.visitor.utm_source']) ? sanitize_cookie($_COOKIE['Drupal.visitor.utm_source']) : '';
    $cookie_utm_medium = isset($_COOKIE['Drupal.visitor.utm_medium']) ? sanitize_cookie($_COOKIE['Drupal.visitor.utm_medium']) : '';
    $cookie_utm_campaign = isset($_COOKIE['Drupal.visitor.utm_campaign']) ? sanitize_cookie($_COOKIE['Drupal.visitor.utm_campaign']) : '';
    $cookie_utm_term = isset($_COOKIE['Drupal.visitor.utm_term']) ? sanitize_cookie($_COOKIE['Drupal.visitor.utm_term']) : '';
    $cookie_utm_content = isset($_COOKIE['Drupal.visitor.utm_content']) ? sanitize_cookie($_COOKIE['Drupal.visitor.utm_content']) : '';
    

    // @Romulo I guess we can remove the $tempstore->get('{cookie name}') as on page load
    // we read the query string and save the cookies. Seems like the tempstore was created
    // specifically to get cookies from the querystring.

    if ($cookie_utm_source) {
      $webform_submission->setElementData('utm_source', $cookie_utm_source);
    }

    if ($cookie_utm_medium) {
      $webform_submission->setElementData('utm_medium', $cookie_utm_medium);
    }

    if ($cookie_utm_campaign) {
      $webform_submission->setElementData('utm_campaign', $cookie_utm_campaign);
    }

    if ($cookie_utm_content) {
      $webform_submission->setElementData('utm_content', $cookie_utm_content);
    }

    if ($cookie_utm_term) {
      $webform_submission->setElementData('utm_term', $cookie_utm_term);
    }
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 *
 * Creates region/country dependent filter.
 */
function planet_core_form_views_exposed_form_alter(&$form, &$form_state): void {
  if ($form['#id'] === 'views-exposed-form-companies-registered-companies') {
    unset($form['region']['#options']['All']);

    $regions = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('regions');
    if ($region = reset($regions)) {
      $form['region']['#default_value'] = $region->tid;
    }

    $input = $form_state->getUserInput();
    $selectedRegion = $input['region'];
    if ($selectedRegion === 'All') {
      $selectedRegion = array_key_first($form['region']['#options']);
    }

    $countries = _planet_core_get_associative_countries_with_region($selectedRegion);
    $form['country']['#options'] = $countries;

    $form['#attached']['library'][] = 'planet_sitestudio_custom_elements/registeredCompanies';
  }
}

/**
 * Gets countries associated with the region.
 */
function _planet_core_get_associative_countries_with_region(string $regionId): array {
  $countries = [];
  $countries['All'] = 'All';
  $vid = 'countries';

  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid, 0, NULL, TRUE);
  if ($regionId != 'All') {
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
      'vid' => $vid,
      'field_region' => $regionId,
    ]);
  }

  foreach ($terms as $term) {
    $countries[$term->id()] = $term->label();
  }

  return $countries;
}
