<?php

/**
 * @file
 * Custom hooks functions for the planet_core module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_preprocess_html().
 *
 * Changes the title of the user page.
 */
function planet_core_preprocess_html(&$variables): void {
  $routeName = \Drupal::routeMatch()->getRouteName();
  if ($routeName === 'entity.user.canonical') {
    $variables['head_title']['title'] = '';
  }
}

/**
 * Implements hook_form_alter().
 */
function planet_core_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  if (str_contains($form_id, "webform_submission_get_in_touch")) {
    // Get query parameters ignored by cache.
    $request = \Drupal::requestStack()->getCurrentRequest();
    $queryParams = $request->query->all();

    if (!empty($queryParams)) {
      if (is_array($queryParams)) {
        $tempstore = \Drupal::service('tempstore.private')->get('planet_tempstore');

        if (isset($queryParams['utm_source']) && !empty($queryParams['utm_source'])) {
          $tempstore->set('utm_source', $queryParams['utm_source']);
        }

        if (isset($queryParams['utm_medium']) && !empty($queryParams['utm_medium'])) {
          $tempstore->set('utm_medium', $queryParams['utm_medium']);
        }

        if (isset($queryParams['utm_campaign']) && !empty($queryParams['utm_campaign'])) {
          $tempstore->set('utm_campaign', $queryParams['utm_campaign']);
        }

        if (isset($queryParams['utm_content']) && !empty($queryParams['utm_content'])) {
          $tempstore->set('utm_content', $queryParams['utm_content']);
        }

        if (isset($queryParams['utm_term']) && !empty($queryParams['utm_term'])) {
          $tempstore->set('utm_term', $queryParams['utm_term']);
        }
      }
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function planet_core_webform_submission_presave(WebformSubmissionInterface $webform_submission): void {
  // Add UTM to the 'Get in touch' webform.
  if ($webform_submission->getWebform()->id() == 'get_in_touch') {
    $tempstore = \Drupal::service('tempstore.private')->get('planet_tempstore');

    if (!empty($tempstore->get('utm_source'))) {
      $webform_submission->setElementData('utm_source', $tempstore->get('utm_source'));
    }

    if (!empty($tempstore->get('utm_medium'))) {
      $webform_submission->setElementData('utm_medium', $tempstore->get('utm_medium'));
    }

    if (!empty($tempstore->get('utm_campaign'))) {
      $webform_submission->setElementData('utm_campaign', $tempstore->get('utm_campaign'));
    }

    if (!empty($tempstore->get('utm_content'))) {
      $webform_submission->setElementData('utm_content', $tempstore->get('utm_content'));
    }

    if (!empty($tempstore->get('utm_term'))) {
      $webform_submission->setElementData('utm_term', $tempstore->get('utm_term'));
    }
  }
}

/**
 * Implements hook_form_views_exposed_form_alter().
 *
 * Creates region/country dependent filter.
 */
function planet_core_form_views_exposed_form_alter(&$form, &$form_state): void {
  if ($form['#id'] === 'views-exposed-form-companies-registered-companies') {
    unset($form['region']['#options']['All']);

    $regions = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('regions');
    if ($region = reset($regions)) {
      $form['region']['#default_value'] = $region->tid;
    }

    $input = $form_state->getUserInput();
    $selectedRegion = $input['region'];
    if ($selectedRegion === 'All') {
      $selectedRegion = array_key_first($form['region']['#options']);
    }

    $countries = _planet_core_get_associative_countries_with_region($selectedRegion);
    $form['country']['#options'] = $countries;

    $form['#attached']['library'][] = 'planet_sitestudio_custom_elements/registeredCompanies';
  }
}

/**
 * Gets countries associated with the region.
 */
function _planet_core_get_associative_countries_with_region(string $regionId): array {
  $countries = [];
  $countries['All'] = 'All';
  $vid = 'countries';

  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid, 0, NULL, TRUE);
  if ($regionId != 'All') {
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
      'vid' => $vid,
      'field_region' => $regionId,
    ]);
  }

  foreach ($terms as $term) {
    $countries[$term->id()] = $term->label();
  }

  return $countries;
}
