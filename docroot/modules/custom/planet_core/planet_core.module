<?php

/**
 * @file
 * Custom hooks functions for the planet_core module.
 */

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\OpenDialogCommand;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function planet_core_form_webform_submission_get_in_touch_form_alter(&$form, FormStateInterface $form_state, $form_id): void {
  unset($form['#token']);

  $form['elements']['layout']['second_column']['about_your_business']['country']['#title'] = '';
  $form['elements']['layout']['first_column']['about_your_project']['textarea']['#title'] = '';

  $form['elements']['layout']['second_column']['about_your_business']['where_are_you_based']['#ajax'] = [
    'callback' => '_updated_region_checkbox_action',
    'wrapper' => 'country-region-wrapper',
    'progress' => [
      'message' => '',
    ],
  ];

  $form['elements']['layout']['second_column']['about_your_business']['country']['#prefix'] = '<div id="country-region-wrapper">';
  $form['elements']['layout']['second_column']['about_your_business']['country']['#suffix'] = '</div>';
}

/**
 * Implements custom ajax callback function.
 *
 * Updates the country field from the region field.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function _updated_region_checkbox_action(array &$form, FormStateInterface &$form_state) {
  $form['elements']['layout']['second_column']['about_your_business']['country']['#options'] = _get_countries_by_region(
    $form_state->getValue('where_are_you_based')
  );

  return $form['elements']['layout']['second_column']['about_your_business']['country'];
}

/**
 * Returns a list of countries from a region.
 *
 * @param int $regionTid
 *   The tid of a region.
 *
 * @return array
 *   The list of countries from a region.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function _get_countries_by_region(int $regionTid): array
{
  $countries = [];
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
    'field_wbregion' => $regionTid,
  ]);

  foreach ($terms as $term) {
    $countries[$term->id()] = $term->label();
  }

  return $countries;
}

function planet_core_form_views_exposed_form_alter(&$form, &$form_state): void {
  if ($form['#id'] === 'views-exposed-form-companies-registered-companies') {
    unset($form['region']['#options']['All']);

    $input = $form_state->getUserInput();
    $selectedRegion = $input['region'];
    if ($selectedRegion === 'All') {
      $selectedRegion = array_key_first($form['region']['#options']);
    }

    $countries = _get_associative_countries_with_region($selectedRegion);
    $form['country']['#options'] = $countries;

    $form['#attached']['library'][] = 'planet_sitestudio_custom_elements/registeredCompanies';
  }
}

function _get_associative_countries_with_region(string $regionId): array {
  $countries = [];
  $countries['All'] = 'All';
  $vid = 'countries';

  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid, 0, NULL, TRUE);
  if ($regionId != 'All') {
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties([
      'vid' => $vid,
      'field_region' => $regionId,
    ]);
  }

  foreach ($terms as $term) {
    $countries[$term->id()] = $term->label();
  }

  return $countries;
}
