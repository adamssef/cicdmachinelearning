<?php

/**
 * @file
 * Custom hooks functions for Planet Core.
 */

use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\node\Entity\Node;
use Drupal\webform\WebformSubmissionInterface;
use Drupal\node\NodeInterface;
use Drupal\planet_core\UTMHelper;

class SpecialTemplates {
  const ACCEPT_PAYMENTS = 5621;
  const CUSTOMER_RESOURCES = 3091;
  const EBOOKS = 2136;
  const PROTEL_IMPRINT = 4286;
  const HTML_SITEMAP = 4716;
  const CASE_STUDIES = 5231;
  const PRESS_FRONT = 4751;
  const PRESS_ARCHIVE = 4756;

  public static function getAll(): array {
      return [
          self::ACCEPT_PAYMENTS,
          self::CUSTOMER_RESOURCES,
          self::EBOOKS,
          self::PROTEL_IMPRINT,
          self::HTML_SITEMAP,
          self::CASE_STUDIES,
          self::PRESS_FRONT,
          self::PRESS_ARCHIVE
      ];
  }
}


/**
 * Implements hook_theme().
 */
function planet_core_theme($existing, $type, $theme, $path): array {
  return [
    'views_view_fields__case_studies__featured_slider' => [
      'template' => 'views-view-fields--case-studies--featured-slider',
      'render element' => 'elements',
      'base hook' => 'views_view',
    ],
    'views_view_fields__case_studies__featured_block' => [
      'template' => 'views-view-fields--case-studies--featured-block',
      'render element' => 'elements',
      'base hook' => 'views_view',
    ],
    'paragraph__right_side_mega_menu' => [
      'template' => 'paragraph--right-side-mega-menu',
      'base hook' => 'paragraph',
    ],
    'node__author' => [
      'template' => 'node--author',
      'base hook' => 'node'
    ],
    'node__sitemap' => [
      'template' => 'node--sitemap',
      'base hook' => 'node',
    ],
    'onboarding_page_template' => [
      'template' => 'page--onboarding-page-template',
      'base hook' => 'page',
    ],
    'pms_transformation_de_template' => [
      'template' => 'page--pms-transformation-page-de-template',
      'base hook' => 'node',
    ],
    'pms_transformation_fr_template' => [
      'template' => 'page--pms-transformation-page-fr-template',
      'base hook' => 'node',
    ],
    'pms_transformation_template' => [
      'template' => 'page--pms-transformation-page-template',
      'base hook' => 'node',
    ],
    'node__blog-single-page' => [
      'template' => 'node--blog-single-page',
      'base hook' => 'node',
    ],
    'node__press-front-page' => [
      'template' => 'node--press-front-page',
      'base hook' => 'node',
    ],
    'node__ebook-front-page' => [
      'template' => 'node--ebook-front-page',
      'base hook' => 'node',
    ],
    'node__press-archive-single-page' => [
      'template' => 'node--press-archive-single-page',
      'base hook' => 'node',
    ],
    'node__resources-page' => [
      'template' => 'node--resources-page',
      'base hook' => 'node',
    ],
    'node__news-page' => [
      'template' => 'node--news-page',
      'base hook' => 'node',
    ],
    'node__ebook-single-page' => [
      'template' => 'node--ebook-single-page',
      'base hook' => 'node',
    ],
    'views_view_field__ebook_link' => [
      'template' => 'views-view-field--ebook-link',
      'base hook' => 'views_view_field',
    ],
    'node__homepage_v1_it' => [
      'template' => 'node--homepage-it',
      'base hook' => 'node',
    ],
    'node__homepage_v1_es' => [
      'template' => 'node--homepage-es',
      'base hook' => 'node',
    ],
    'node__homepage_v1_de' => [
      'template' => 'node--homepage-de',
      'base hook' => 'node',
    ],
    'node__homepage_v1_fr' => [
      'template' => 'node--homepage-fr',
      'base hook' => 'node',
    ],
    'node__homepage_v1' => [
      'template' => 'node--homepage',
      'base hook' => 'node',
    ],
    'node__homepage_v2_it' => [
      'template' => 'node--homepage-v2-it',
      'base hook' => 'node',
    ],
    'node__homepage_v2_fr' => [
      'template' => 'node--homepage-v2-fr',
      'base hook' => 'node',
    ],
    'node__homepage_v2_es' => [
      'template' => 'node--homepage-v2-es',
      'base hook' => 'node',
    ],
    'node__homepage_v2_de' => [
      'template' => 'node--homepage-v2-de',
      'base hook' => 'node',
    ],
    'node__homepage_v2' => [
      'template' => 'node--homepage-v2',
      'base hook' => 'node',
    ],
    'node__basic_page' => [
      'template' => 'node--basic-page',
      'base hook' => 'node',
    ]
  ];
}

/**
 * Implements hook_preprocess_html().
 *
 * Changes the title of the user page.
 */
function planet_core_preprocess_html(&$variables): void {
  $routeName = \Drupal::routeMatch()->getRouteName();
  if ($routeName === 'entity.user.canonical') {
    $variables['head_title']['title'] = '';
  }

  $current_path = \Drupal::service('path.current')->getPath();
  $current_path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);

  if ($current_path_alias === '/pms-transformation') {
    $variables['attributes']['class'][] = 'planet-header-transparent';
  }

  // Adds to a body css class that identifies the current page.
  $value_to_be_used = $current_path_alias ?? $current_path;
  $value_to_be_used = ltrim($value_to_be_used, '/');
  $value_to_be_used = str_replace('/', '-', $value_to_be_used);
  $value_to_be_used = str_replace('_', '-', $value_to_be_used);

  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node instanceof Node) {
    $url_alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());

    if (str_starts_with($url_alias, '/blog/')) {
      $blog_value_to_be_used = 'blog-page';
      $variables['attributes']['class'][] = 'plnt-css-' . $blog_value_to_be_used;
    }
  }

  $variables['attributes']['class'][] = 'plnt-css-' . $value_to_be_used;

  // For admin pages we need to add a class to the body tag.
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    $variables['attributes']['class'][] = 'plnt-css-admin-page';
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 * UTMs handling
 */
function planet_core_webform_submission_presave(WebformSubmissionInterface $webform_submission): void {
  UTMHelper::processSubmission($webform_submission);
}


/**
 * Implements hook_preprocess_HOOK() for node templates.
 */
function planet_core_preprocess_node__author(&$variables)
{
  // Get the last 5 article titles.
  $node = $variables['node'];

  // Get the NID (node ID) of the Author node.
  $node_id = $node->id();

  $planet_core_service = \Drupal::service('planet_core.article_helper');

  $author_data = $planet_core_service->getAuthorArticles($node_id);

  // Pass the titles to the template.
  $variables['author_data'] = $author_data;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() to suggest a custom template for a specific node.
 */
function planet_core_theme_suggestions_page_alter(array &$suggestions, array $variables)
{
  $node = \Drupal::routeMatch()->getParameter('node');

  if (!$node || !($node instanceof \Drupal\node\NodeInterface) || (\Drupal::currentUser()->isAuthenticated())) {
    return;
  }

  $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());

  switch ($alias) {
    case "/customer-resources":
      $suggestions[] = 'onboarding_page_template';
      break;
  }
}

/**
 * Implements hook_cron().
 */
function planet_core_cron()
{
  // Calculate the timestamp for 30 days ago.
  $thirtyDaysAgo = new DrupalDateTime('-30 days');
  $thirtyDaysAgoTimestamp = $thirtyDaysAgo->getTimestamp();

  // Load entity storage for pardot_submission.
  $entityTypeManager = \Drupal::entityTypeManager();
  $storage = $entityTypeManager->getStorage('pardot_submission');

  // Query for pardot_submission entities older than 30 days.
  $query = $storage->getQuery()
    ->condition('changed', $thirtyDaysAgoTimestamp, '<')
    ->accessCheck();
  $entity_ids = $query->execute();

  if (empty($entity_ids)) {
    \Drupal::logger('planet_core')->notice('No Pardot Submission to clean.');
    \Drupal::messenger()->addMessage('No Pardot Submission to clean.');
    return;
  }

  // Load and delete each entity.
  foreach ($entity_ids as $entity_id) {
    $entity = $storage->load($entity_id);
    if ($entity) {
      $entity->delete();
    }
  }

  \Drupal::logger('planet_core')->notice('Pardot Submission cleanup cron has been executed.');
  \Drupal::messenger()->addMessage('Pardot Submission cleanup cron has been executed.');
}


/**
 * Implements hook_preprocess_HOOK() for views_view_field templates.
 */
function planet_core_preprocess_views_view_field(array &$variables)
{
  $this_page_node = \Drupal::routeMatch()->getParameter('node');

  if ($this_page_node) {
    $node_type = $this_page_node->getType();
    $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $text = strip_tags($variables['output']);
    $old_output = $variables['output'];

    if ($node_type && $node_type === 'page') {
      if ($text === "Read full case study") {
        switch ($langcode) {
          case 'de':
            $variables['output'] = ['#markup' => str_replace($text, 'Fallstudie lesen', $old_output)];
            break;
          case 'fr':
            $variables['output'] = ['#markup' => str_replace($text, 'Lire l\'étude de cas complète', $old_output)];
            break;
          case 'it':
            $variables['output'] = ['#markup' => str_replace($text, 'Leggi il case study completo', $old_output)];
            break;
          case 'es':
            $variables['output'] = ['#markup' => str_replace($text, 'Leer el caso de éxito completo', $old_output)];
            break;
        }
      }
    }
  }

  if ($variables['view']->id() === 'ebook') {
    if ($variables['field']->getPluginId() === 'entity_link') {
      $node_translation = \Drupal::service('entity.repository')->getTranslationFromContext($variables['row']->_entity);
      $lang = \Drupal::languageManager()->getCurrentLanguage()->getId();
      $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node_translation->id(), $lang);

      if ($lang !== 'en') {
        $link = "/$lang" . $alias;
      } else {
        $link = $alias;
      }

      $variables['link'] = $link;
    }
  }
}


/**

 * Implements hook_theme_suggestions_HOOK_alter().
 */
function planet_core_theme_suggestions_node_alter(array &$suggestions, array $variables)
{
  $node = \Drupal::routeMatch()->getParameter('node');
  if (!$node || !($node instanceof \Drupal\node\NodeInterface)) {
    return;
  }
  $config = \Drupal::config('planet_core.settings');
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());

  // News page suggestions
  if ($node->id() == SpecialTemplates::PRESS_FRONT) {
    $suggestions[] = 'node__press-front-page';
    return;
  } else if ($node->id() == SpecialTemplates::PRESS_ARCHIVE) {
    $suggestions[] = 'node__press-archive-single-page';
    return;
  } else if ($node->id() == SpecialTemplates::EBOOKS) {
    $suggestions[] = 'node__ebook-front-page';
    return;
  } else {
    switch ($alias) {
      case "/blog":
        $suggestions[] = 'node__blog-single-page';
        return;
      case "/sitemap":
        $suggestions[] = 'node__sitemap';
        return;
    }
  }

  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $language_templates = [
        'it' => 'node__homepage_v1_it',
        'es' => 'node__homepage_v1_es',
        'de' => 'node__homepage_v1_de',
        'fr' => 'node__homepage_v1_fr',
        'en' => 'node__homepage_v1',
    ];
    
    $suggestions[] = $language_templates[$language] ?? 'node__homepage_v1';
    return;
}

  // PMS transformation suggestions
  if ($alias == "/pms-transformation") {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    switch ($language) {
      case "fr":
        $suggestions[] = 'pms_transformation_fr_template';
        break;
      case "de":
        $suggestions[] = 'pms_transformation_de_template';
        break;
      default:
        $suggestions[] = 'pms_transformation_template';
    }
    return;
  }

  if ($node->getType() === 'resources') {
    $suggestions[] = 'node__resources-page';
  }

  if ($node->getType() === 'newsroom') {
    $suggestions[] = 'node__news-page';
  }

  if ($node->getType() === 'e_book_') {
    $suggestions[] = 'node__ebook-single-page';
  }

  if ($node->getType() === "page" && !in_array($node->id(), SpecialTemplates::getAll())) {
    $suggestions[] = 'node__basic_page';
  }
}

function planet_core_preprocess_node(array &$variables)
{
  $node = $variables['node'];
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());

  $planet_core_article_helper = \Drupal::service('planet_core.article_helper');
  $planet_core_news_helper = \Drupal::service('planet_core.news_helper');
  $planet_core_ebooks_helper = \Drupal::service('planet_core.ebooks_helper');

  $variables['#attached']['library'][] = 'planet_core/language-popup';

  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $variables['#attached']['library'][] = 'planet_core/front-page';
  }

  if ($alias === '/sitemap') {
    $variables['term_tree'] = \Drupal::service('planet_html_sitemap.helper')
      ->buildTree();
    $variables['#attached']['library'][] = 'planet_html_sitemap/planet_html_sitemap';
  }

  if ($node->getType() == 'author') {
    $variables['#attached']['library'][] = 'planet_core/author-page';
  }

  if (in_array($node->getType(), ["resources", "newsroom"])) {
    $node_translation_service = \Drupal::getContainer()->get('planet_core.node_translation_service');
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $variables['#attached']['library'][] = 'planet_core/single-article-page';
    $variables['language'] = $language;
    $variables['contact_us_links'] = $node_translation_service->getTranslationArrWithPrefixes('/contact/sales');
  }

  if ($node->getType() == 'resources') {
    $variables['article'] = $planet_core_article_helper->getSingleArticleData($node->id());
  }

  if ($node->getType() == 'newsroom') {
    $variables['article'] = $planet_core_news_helper->getSingleNewsData($node->id());
  }

  if ($alias == "/blog") {
    $variables['featured_article'] = $planet_core_article_helper->getLastPublishedArticle();
    $variables['useful_links'] = $planet_core_article_helper->getToggleLinks();
    $variables['tags'] = $planet_core_article_helper->getAllBlogArticleTags();
    $variables['#attached']['library'][] = 'planet_core/blog-page';
  }

  if ($node->id() == SpecialTemplates::PRESS_ARCHIVE) { //news-archive
    $variables['tags'] = $planet_core_news_helper->getAllNewsArticleTags();
    $variables['years'] = $planet_core_news_helper->getYears();
    $variables['useful_links'] = $planet_core_article_helper->getToggleLinks();
    $variables['#attached']['library'][] = 'planet_core/news-page';
  }

  // Check for specific node ID instead of alias.
  if ($node->id() == SpecialTemplates::PRESS_FRONT) {
    $variables['featured_article'] = $planet_core_news_helper->getLastPublishedNews();
    $variables['tags'] = $planet_core_news_helper->getAllNewsArticleTags();
    $variables['useful_links'] = $planet_core_article_helper->getToggleLinks();
    $variables['articles'] = $planet_core_news_helper->getPublishedNews(3, 0, "en", false, false, false);
    $variables['external_articles'] = $planet_core_news_helper->getPublishedNews(3, 0, "en", true, false);
  }

  if ($node->id() == SpecialTemplates::EBOOKS) { //news
    $variables['featured_article'] = $planet_core_ebooks_helper->getLastPublishedEbook();
    $variables['articles'] = $planet_core_ebooks_helper->getPublishedEbooks();
  }

  if ($node->getType() == 'page' && !in_array($node->id(), SpecialTemplates::getAll())) {

    $page_service = \Drupal::service('planet_core.basic_page_service');
    $variables['product_page_paragraphs'] = $page_service->getPageParagraphData($node);

    if(!$node->get('field_webform')->isEmpty()) {
        $webform_id = $node->get('field_webform')->target_id;
        $form = \Drupal::entityTypeManager()
            ->getStorage('webform')
            ->load($webform_id)
            ->getSubmissionForm();
        $webform_html = $node->get('field_webform_text')->value;

        $variables['form'] = $form;
        $variables['webform_html'] = $webform_html;
        $variables['langcode'] = \Drupal::languageManager()->getCurrentLanguage()->getId();

    }
}

  if ($node->getType() == 'e_book_') {
    if(!$node->get('field_ebook_form')->isEmpty()) {
    $webform_id = $node->get('field_ebook_form')->target_id;
    $form = \Drupal::entityTypeManager()
        ->getStorage('webform')
        ->load($webform_id)
        ->getSubmissionForm();
    $variables['form'] = $form;
    }

    if (!$node->get('field_main_image_media')->isEmpty()) {
      $media = $node->get('field_main_image_media')->entity;
      if ($media) {
        $image_field = $media->get('field_media_image');
        if (!$image_field->isEmpty()) {
          $file = $image_field->entity;
          $variables['image_url'] = $file->createFileUrl();
        }
      }
    }
}


}

/**
 * Implements hook_preprocess_HOOK().
 */
function planet_core_preprocess_page(array &$variables) {
  $variables['#attached']['library'][] = 'planet_core/language-popup';
  $variables['#attached']['library'][] = 'planet_core/sitewide-libraries';

  // Get current node if it exists
  $node = \Drupal::routeMatch()->getParameter('node');

  // Check if it's a node and if it's of type 'page'.
  if ($node instanceof NodeInterface && ($node->getType() === 'page' && $node->id() != 5621 || $node->getType() === 'events')) {
    $variables['#attached']['library'][] = 'planet_core/basic-pages';
  }

  // Your existing path-based condition
  $current_path = \Drupal::service('path.current')->getPath();
  $current_path_alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_path);
  if ($current_path_alias === '/pms-transformation') {
    $variables['#attached']['library'][] = 'planet_core/pms-transformation';
    $variables['#attached']['library'][] = 'planet_core/tailwind-templates';
  }
}
