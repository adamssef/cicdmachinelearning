<?php

/**
 * @file
 * Primary module hooks for planet_customer_resources_library module.
 */

use Drupal\node\NodeInterface;
use Drupal\node\Entity\Node;


/**
 * Implements hook_theme().
 */
function planet_customer_resources_library_theme() {
  return [
    'node__planet_customer_resources_library' => [
      'template' => 'node--planet-customer-resources-library',
      'base hook' => 'node',
    ],
    'views_view__planet_customer_resources_library' => [
      'template' => 'views-view--planet-customer-resources-library',
      'base hook' => 'views_view',
    ],
    'block__views_exposed_filter_block__planet_resources_block_2' => [
      'template' => 'block--views-exposed-filter-block--planet-resources-block-2',
      'base hook' => 'block',
    ],
    'node__getting_started' => [
      'template' => 'node--getting-started',
      'base hook' => 'node',
    ]
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */


 function planet_customer_resources_library_preprocess_node(array &$variables)
{
  $node = $variables['node'];
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $node->id());
  if ($alias == "/getting-started") {

    // Get the node IDs of 'product' content type ordered by created date DESC
    $query = \Drupal::entityQuery('node')
      ->accessCheck(TRUE) // or FALSE depending on your case
      ->condition('type', 'planet_products')
      ->condition('status', 1)
      ->sort('created', 'DESC');
  
    $nids = $query->execute();
  
    $products = [];
  
    if (!empty($nids)) {
      $nodes = Node::loadMultiple($nids);
  
      foreach ($nodes as $node) {
        $products[] = [
          'title' => $node->label(),
          'url' => $node->toUrl()->toString(),
        ];
      }
    }
  
    // Add it to the template variables.
    $variables['products'] = $products;
  
  }

}


function planet_customer_resources_library_preprocess_page(array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if ($node) {
    $route_object = \Drupal::routeMatch()->getRouteObject();
    $is_admin = \Drupal::service('router.admin_context')->isAdminRoute($route_object);

    $current_url = \Drupal::service('path.current')->getPath();
    $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);

    // It's better to check on alias than node ID.
    if ($alias === '/customer-resources-library' && !$is_admin) {
      $variables['#attached']['library'][] = 'planet_customer_resources_library/tailwind';
    }
  }

}

function planet_customer_resources_library_theme_suggestions_node_alter(array &$suggestions, array &$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');

  if (!$node or !($node instanceof NodeInterface)) {
    return;
  }

  $node_translation_service = \Drupal::service('planet_core.node_translation_service');
  $route_object = \Drupal::routeMatch()->getRouteObject();
  $current_url = \Drupal::service('path.current')->getPath();
  $alias = \Drupal::service('path_alias.manager')->getAliasByPath($current_url);
  $is_admin_page = \Drupal::service('router.admin_context')->isAdminRoute($route_object);

  if (!$is_admin_page) {

    $translations = $node_translation_service->buildTranslationArrayForNode($node);
    $lang_id = \Drupal::languageManager()->getCurrentLanguage()->getId();

    if ($alias === '/customer-resources-library') {
      if (in_array($alias, $translations) || in_array("/$lang_id" . $alias, $translations)) {
        $suggestions[] = 'node__planet_customer_resources_library';
      }
    }

    if($alias == '/getting-started') {
        $suggestions[] = 'node__getting_started';
        return;
    }

  }
}

function planet_customer_resources_library_theme_suggestions_views_view_alter(array &$suggestions, array &$variables) {
  $view_id = $variables['view']->id();
  $current_display = $variables['view']->current_display;

  if ($view_id === 'planet_resources' && $current_display === 'block_2') {
    $nids = array_map(function ($row) {
      return $row->_entity->id();
    }, $variables['view']->result);

    $resources = \Drupal::service('planet_customer_resources_library.service')->getResourcesDataArray($nids);
    $variables['resources'] = $resources;
    $suggestions[] = 'views_view__planet_customer_resources_library';
  }

}
